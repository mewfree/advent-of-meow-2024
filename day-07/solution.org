#+title: Advent of Code 2024 Day 7
#+property: header-args :tangle solution.rb

Parsing input as a hash
#+begin_src ruby :results verbatim :session day7
calibrations = File.readlines("example.txt", chomp: true).inject({}) do |hash, calibration|
  test_value, numbers = calibration.split(': ')
  hash[test_value.to_i] = numbers.split.map(&:to_i)
  hash
end
#+end_src

#+RESULTS:
: {190=>[10, 19], 3267=>[81, 40, 27], 83=>[17, 5], 156=>[15, 6], 7290=>[6, 8, 6, 15], 161011=>[16, 10, 13], 192=>[17, 8, 14], 21037=>[9, 7, 18, 13], 292=>[11, 6, 16, 20]}

#+begin_src ruby :results verbatim :session day7
operators = [:+, :*].freeze
#+end_src

#+RESULTS:
: [:+, :*]

#+begin_src ruby :results verbatim :session day7
results = calibrations.map do |test_value, numbers|
  operation_sequences = operators.repeated_permutation(numbers.size - 1).to_a
  result = operation_sequences.map do |operation_sequence|
    result = numbers.first
    numbers[1..].each_with_index do |number, index|
      result = result.send(operation_sequence[index], number)
    end
    result if result == test_value
  end
  result.compact.uniq
end
#+end_src

#+RESULTS:
: [[190], [3267], [], [], [], [], [], [], [292]]

#+begin_src ruby :results verbatim :session day7
result = results.flatten.sum
#+end_src

#+RESULTS:
: 3749

#+begin_src ruby :results none :session day7
puts "Part 1: #{result}"
#+end_src
